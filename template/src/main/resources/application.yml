{%- set hasPublish = false -%}
{%- set hasSubscribe = false -%}
{%- for channelName, channel in asyncapi.channels() -%}
    {%- if channel.hasSubscribe() -%}
        {%- set hasSubscribe = true -%}
    {%- endif -%}
    {%- if channel.hasPublish() -%}
        {%- set hasPublish = true -%}
    {%- endif -%}
{%- endfor -%}
{%- if asyncapi | isProtocol('amqp') %}
amqp:
  broker:
    host: localhost
    port: 5672
    username: guest
    password: guest
  exchange:
  {% for channelName, channel in asyncapi.channels() %}
    {% if channel.hasPublish() and channel.publish().bindings('amqp') %}
    {{channel.publish().bindings('amqp').exchange().name()}}: {{channelName}}
    {% endif %}
  {% endfor %}
  queue:
  {% for channelName, channel in asyncapi.channels() %}
    {% if channel.hasSubscribe() and channel.subscribe().bindings('amqp') %}
    {{channel.subscribe().bindings('amqp').queue().name()}}: {{channelName}}
    {% endif %}
  {% endfor %}
{% endif %}
{%- if asyncapi | isProtocol('mqtt') %}
  {% for serverName, server in asyncapi.servers() %}
mqtt:
  broker:
    host: tcp://{{server.url()}}
    port: {{server.variables(port).defaultValue()}}
    username:
    password:
  topic:
    {% for channelName, channel in asyncapi.channels() %}
    {{channelName}}Topic: {{channelName}}
    {% endfor %}
  {% endfor %}
{% endif %}
{%- if asyncapi | isProtocol('kafka') %}
kafka:
  bootstrap-servers: {% for serverName, server in asyncapi.servers() %}{{server.url()}}{% if not loop.last %},{% endif %}{% endfor %}
  {%- if hasSubscribe %}
  subscribe:
    pool-timeout: 3000
    amount-of-listeners: 3
  {% endif %}
{% endif %}